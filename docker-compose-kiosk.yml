services:
  postgres-kiosk:
    image: postgres:14-alpine
    container_name: ${POSTGRES_CONTAINER}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_kiosk_data:/var/lib/postgresql/data
      - ./backend/init-db:/docker-entrypoint-initdb.d
    networks:
      craft-kiosk-network:
        ipv4_address: ${POSTGRES_IP}
    restart: unless-stopped

  backend-kiosk:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${BACKEND_CONTAINER}
    ports:
      - "${BACKEND_PORT}:8080"
    environment:
      NODE_ENV: ${NODE_ENV}
      KIOSK_MODE: ${KIOSK_MODE}
    env_file:
      - ./backend/.env.kiosk
    depends_on:
      - postgres-kiosk
    networks:
      craft-kiosk-network:
        ipv4_address: ${BACKEND_IP}
    restart: unless-stopped

  frontend-kiosk:
    build:
      context: ./frontend
      dockerfile: Dockerfile.kiosk
    container_name: ${FRONTEND_CONTAINER}
    ports:
      - "${FRONTEND_PORT}:80"
    env_file:
      - ./frontend/.env.kiosk
    depends_on:
      - backend-kiosk
    networks:
      craft-kiosk-network:
        ipv4_address: ${FRONTEND_IP}
    restart: unless-stopped

  cloudflared-kiosk:
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel run ${CLOUDFLARE_TUNNEL_NAME}
    depends_on:
      - frontend-kiosk
    networks:
      craft-kiosk-network:
        ipv4_address: ${CLOUDFLARED_IP}
    volumes:
      - ${CLOUDFLARE_CONFIG_PATH}:/etc/cloudflared

networks:
  craft-kiosk-network:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: 172.30.0.1

volumes:
  postgres_kiosk_data:
