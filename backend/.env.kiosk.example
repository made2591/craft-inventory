# ============================================================================
# Backend Environment Configuration - Kiosk Mode
# ============================================================================
# Copy this file to .env.kiosk and customize the values for kiosk deployment
# This file contains example values with no sensitive information
# ============================================================================

# Database Configuration - Kiosk Environment
# Uses separate database and network for complete isolation
DATABASE_URL=postgres://craftuser:craftpassword@172.30.1.2:5432/craftdb

# Server Configuration
PORT=8080
NODE_ENV=development

# Kiosk Mode Configuration
# IMPORTANT: Set to "true" to enable automatic database reset functionality
KIOSK_MODE=true

# Reset Interval Configuration
# How often the database should be automatically reset (in minutes)
# Recommended values:
#   - 15 minutes for high-traffic demos
#   - 30 minutes for moderate use
#   - 60 minutes for low-traffic environments
KIOSK_RESET_INTERVAL_MINUTES=15

# Security Settings for Kiosk
# Kiosk mode typically allows broader access for demo purposes
CORS_ORIGIN=*
ENABLE_CORS=true

# Database Pool Settings - Optimized for Kiosk
# Smaller pool size as kiosk mode resets frequently
DB_POOL_MAX=10
DB_POOL_IDLE_TIMEOUT=15000
DB_POOL_CONNECTION_TIMEOUT=2000

# Logging Level - Enhanced for Kiosk Monitoring
# Use "info" or "debug" to monitor reset cycles
LOG_LEVEL=info

# Kiosk-Specific Settings
# Disable file uploads in kiosk mode for security
UPLOAD_MAX_SIZE=0
ENABLE_FILE_UPLOAD=false

# Auto-populate test data after each reset
ENABLE_TEST_DATA_RELOAD=true

# Kiosk Display Settings
KIOSK_DISPLAY_NAME=Craft Inventory Demo
KIOSK_WELCOME_MESSAGE=Welcome to the Craft Inventory Management System Demo

# Reset Notification Settings
ENABLE_RESET_NOTIFICATIONS=true
RESET_WARNING_MINUTES=2

# ============================================================================
# Kiosk Mode Features:
# - Automatic database reset every N minutes
# - Complete data isolation from main environment
# - Test data automatically reloaded after each reset
# - Enhanced logging for monitoring reset cycles
# - Separate Docker network and database container
# ============================================================================
#
# Instructions:
# 1. Copy this file to .env.kiosk in the backend directory
# 2. Adjust KIOSK_RESET_INTERVAL_MINUTES as needed
# 3. Update DATABASE_URL if using different network configuration
# 4. Use with docker-compose-kiosk.yml for complete isolation
# 5. Monitor logs to ensure reset functionality works correctly
# ============================================================================
